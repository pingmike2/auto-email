name: 自动群发邮件

on:
  schedule:
    - cron: "0 0 * * 1"  # 每周一 0 点执行一次
  workflow_dispatch:  # 支持手动触发

jobs:
  send_email:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # 可根据需要调整为具体的版本

      # Step 3: 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # 使用 requirements.txt 管理依赖

      # Step 4: 运行邮件发送脚本
      - name: Run email sender script
        env:
          EMAIL_CONFIG: ${{ secrets.EMAIL_CONFIG }}
          TG_ID: ${{ secrets.TG_ID }}
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
        run: |
          python "send_email.py"
      
      - name: Commit time.txt to repo
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 如果 time.txt 不存在，说明是第一次运行
          if [ ! -f time.txt ]; then
            echo "首次生成时间：$(date +'%Y-%m-%d %H:%M:%S')" > time.txt
          else
            echo "$(date +'%Y-%m-%d %H:%M:%S')" > time.txt
          fi

          git add time.txt

          # 如果有更改再提交
          if git diff --cached --quiet; then
            echo "无变化，无需提交"
          else
            git commit -m "⏱️ 更新时间文件: $(date +'%Y-%m-%d %H:%M:%S')"
            git push origin HEAD:main
          fi